{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onEditing","setState","isEditing","onChange","e","input","target","value","setProgress","state","items","onSubmit","preventDefault","length","id","Date","getTime","text","isCompleted","replace","concat","alert","onDelete","filtered","filter","item","progress","Math","floor","onClick","updated","map","localStorage","getItem","all","JSON","parse","this","setItem","stringify","className","role","style","width","i","type","checked","class","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fab18c68.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isEditing: false,\n      input: '',\n      progress:0\n    }\n  }\n  componentDidMount() {\n    // console.log(localStorage.getItem)\n    if (localStorage.getItem(\"items\") !== null) {\n      let all = JSON.parse(localStorage.getItem(\"items\"));\n      let progress = JSON.parse(localStorage.getItem(\"progress\"));\n      this.setState({ items: all });\n      this.setState({ progress: progress });\n    } else {\n      let all =[];\n      let progress = 0;\n      this.setState({ items: all });\n      this.setState({ progress: progress });\n    }  \n  }\n  componentDidUpdate() {\n    localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    localStorage.setItem(\"progress\", JSON.stringify(this.state.progress));\n  }\n  onEditing=()=> {\n    this.setState({ isEditing: true });\n  }\n  onChange = (e) => {\n\n    this.setState({ input: e.target.value },()=>this.setProgress(this.state.items));\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.input.length === 0) { return;}\n    const items = {\n      id: new Date().getTime(),\n      text: this.state.input,\n      isCompleted:false\n    }\n    let str = items.text.replace(/^\\s+/g, \"\");\n    if (str.length !== 0) {\n      this.setState({ items: this.state.items.concat(items), input: '' }, () => this.setProgress(this.state.items))\n    } else {\n      alert(\"Enter valid items\");\n    }\n  }\n  onDelete = (id) => {\n    let filtered=this.state.items.filter(item => {\n      return item.id !== id;\n    })\n    this.setState({ items: filtered },()=>this.setProgress(this.state.items));\n  }\n  setProgress = (items) => {\n    let checked = items.filter(item => { return item.isCompleted })\n    let progress = checked.length / items.length;\n    if (!progress) { return this.setState({ progress: 0 }); }\n    this.setState({ progress: Math.floor(progress*100) });\n  }\n  onClick = (id) => {\n    let updated = this.state.items.map(item => {\n      if (item.id === id) {\n        item.isCompleted = !item.isCompleted\n      }\n      return item;\n    })\n    this.setState({ items: updated },()=>this.setProgress(this.state.items));\n  }\n\n  render() {\n    return (\n      <form id=\"todo-list\" onSubmit={this.onSubmit}>\n        <div className=\"progress\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{width:this.state.progress+\"%\"}} >{this.state.progress+\"%\"}</div>\n        </div>\n        { this.state.isEditing ?\n          <span className=\"todo-wrap\"><br/><br/>\n            <input onChange={this.onChange} value={this.state.input} />\n          </span> : \"\"}\n        <div onClick={()=>this.onEditing()} id=\"add-todo\"><i className=\"fa fa-plus\"></i>\n        &nbsp; Add an item</div>\n        { this.state.items.length > 0 ?\n          this.state.items.map((item,i) => {\n            return (\n              <span className=\"todo-wrap\" key={i}>\n                <span onClick={()=>this.onClick(item.id)}>\n                  <input type=\"checkbox\" checked={item.isCompleted}/>\n                  <label className=\"todo\"><i class=\"fa fa-check\"></i>{item.text}</label>\n                </span>\n                <span className=\"delete-item\" onClick={()=>this.onDelete(item.id)} title=\"remove\">\n                <i className=\"fa fa-times-circle\"></i>\n              </span>\n            </span>\n            )\n           }): <p></p>\n        }\n     </form>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}